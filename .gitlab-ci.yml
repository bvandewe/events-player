# --- GLOBAL CONTEXT ---
image: bitnami/kubectl:1.22.3

## Scripts
.k8s_delete: &k8s_delete
    - echo "$kube_config" > /tmp/kube_config
    - export KUBECONFIG=/tmp/kube_config
    - cd ${CI_PROJECT_DIR}/deployment
    - kubectl delete -f common/
    - kubectl delete -f $K8S_ENV/

.k8s_deploy_template: &k8s_deploy
    - echo "$kube_config" > /tmp/kube_config
    - export KUBECONFIG=/tmp/kube_config
    - kubectl version --client
    - cd ${CI_PROJECT_DIR}/deployment
    - kubectl apply -f common/
    - kubectl apply -f $K8S_ENV/

## The pipeline stages
stages:
  - test
  - publish
  - delete
  - deploy

## The Jobs

### Stage TEST
check-aws-gitlab-repo:
  stage: test
  image: python
  tags:
    - k8s-runner
  script:
    - pip install httpx
    - /cache/ccie-gitlab-runner-tools/create-gitlab-repo.py $aws_gitlab_url ${CI_PROJECT_PATH} $aws_gitlab_token
  only:
    - tags

# Trigger CI to: (build the image + tag it + push it to Gitlab' Registry)
# whenever a new Tag is created in any branch
publish-job:
  stage: publish
  image: docker:git
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - echo "Publishing the container image with the tag '$CI_COMMIT_TAG'"
    - docker build -f Dockerfile -t $CI_PROJECT_NAME:$CI_COMMIT_TAG .
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_REGISTRY/$CI_PROJECT_PATH/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_REGISTRY/$CI_PROJECT_PATH/$CI_PROJECT_NAME:latest
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_PROJECT_NAME:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:$CI_COMMIT_TAG
  only:
    - tags

### Stage DELETE
delete-dev-k8s:
  when: manual
  variables:
    K8S_ENV: dev-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_dev_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: delete
  script: 
    - *k8s_delete
  only:
    - main


### Stage DEPLOY
deploy-dev-k8s:
  when: manual
  variables:
    K8S_ENV: dev-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_dev_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
    - *k8s_deploy
  only:
    - main

deploy-sj-prod-k8s:
  when: manual
  variables:
    K8S_ENV: sj-prod-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_sj_prod_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
    - *k8s_deploy
  only:
    - main

deploy-aws-prod-k8s:
  when: manual
  variables:
    K8S_ENV: aws-prod-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_aws_prod_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
    - *k8s_deploy
  only:
    - main
