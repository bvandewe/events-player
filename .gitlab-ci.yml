# --- GLOBAL CONTEXT ---
image: bitnami/kubectl:1.22.3

## Scripts
# Define the script as a YAML anchor
.k8s_deploy_template: &k8s_deploy_common
    - echo "$kube_config" > /tmp/kube_config
    - export KUBECONFIG=/tmp/kube_config
    - kubectl version --client
    - cd ${CI_PROJECT_DIR}/deployment
    - kubectl apply -f common/

.k8s_deploy: &k8s_deploy_specific
    # - echo "$kube_config" > /tmp/kube_config
    # - export KUBECONFIG=/tmp/kube_config
    - kubectl apply -f $K8S_ENV/
    - kubectl get pod -n mozart

## The pipeline stages
stages:
  - test
  - deploy

## The Jobs

### Stage TEST
check-aws-gitlab-repo:
  stage: test
  image: python
  tags:
    - k8s-runner
  script:
    - pip install httpx
    - /cache/ccie-gitlab-runner-tools/create-gitlab-repo.py $aws_gitlab_url ${CI_PROJECT_PATH} $aws_gitlab_token

### Stage DEPLOY
deploy-dev-k8s:
  variables:
    K8S_ENV: dev-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_dev_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
  - *k8s_deploy_common
  - *k8s_deploy_specific
  only:
    - main

deploy-sj-prod-k8s:
  when: manual
  variables:
    K8S_ENV: sj-prod-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_sj_prod_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
  - *k8s_deploy_common
  - *k8s_deploy_specific
  only:
    - main

deploy-aws-prod-k8s:
  when: manual
  variables:
    K8S_ENV: aws-prod-k8s
    kube_config: $kube_config_gitlab_cicd_ns_mozart_aws_prod_k8s
  tags:
    - mozart-k8s-runner
  image: bitnami/kubectl:1.22.3
  stage: deploy
  script:
  - *k8s_deploy_common
  - *k8s_deploy_specific
  only:
    - main
